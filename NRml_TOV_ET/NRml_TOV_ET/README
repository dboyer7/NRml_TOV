Cactus Code Thorn NRml_TOV_ET
Author(s)     : David Boyer
Note          : This code is built off of OdieGM as the heart ODE solver 
		and uses GRHayLib thorn to store EOS data.
Maintainer(s) : David Boyer
License       : BSD-2
--------------------------------------------------------------------------

==========
1. Purpose
==========

NRml_TOV_ET is the Einstein Toolkit edition of the NRml_TOV solver and adds 
additional features from the original solver, like access to the ET grid and 
variables. It was made to solve the TOV equations, or the equations of 
hydrostatic equilibrium for spherically symmetric static stars, specifically 
Neutron stars. 

==========
2. Support
==========

NRml_TOV_ET supports three types of EOS: Simple Polytrope, Piecewise Polytrope, 
and Tabulated EOS.

At this time, NRml_TOV_ET only allows two adaptive ODE methods from OdieGM: 
RK4(5) and DP7(8). More can be enabled if there is demand, as OdieGM has
many more adaptive and non-adaptive methods to choose from, but the two 
I listed felt sufficient enough.

All these choices can be made in the parfile. No touching the src code is
necessary (as it should). For examples of each EOS type, see the par directory.

==========
3. Output
==========

In addition to the traditional ascii output that can be controlled by the user, 
NRml_TOV_ET also saves the raw TOV data to a .txt file that can be looked at anytime.
It save 7 quantities from solving the TOV at each step, in this order:

Raw TOV:
r_Schw, rho_energy, rho_baryon, P, M, nu, r_Iso(rbar)

There is also an adjusted TOV data file, that normalizes rbar, and finds lapse
and conformal factor. There are eight quantities at each step in the following
order:

Adjusted TOV:
r_Schw, rho_energy, rho_baryon, P, M, lapse(expnu), conformal factor(exp4phi), Normalized rbar

==========
4. Testing
==========

This code has been tested against both the NRpy generated TOV solver and 
constraint tested using Baikal.

Simple Polytrope: 
Raw data sits within 10^-12/-13 in relative error with NRpy
Constraint violation goes down with higher resolved grids

Piecewise Polytrope:
Raw data sits within 10^-12/-13 in relative error with NRpy
Constraint violation goes down with higher resolved grids

Tabulated EOS:
Raw data sits within 10^-8 in relative error with NRpy (Mostly from EOS table interpolation)
Constraint violation goes down with higher resolved grids (to interpolation error)
